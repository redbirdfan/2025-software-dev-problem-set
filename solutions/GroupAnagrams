//link https://leetcode.com/problems/group-anagrams/

//Three arrays fill great, showing logic is correct.  Will need to rewrite to create a new array, perhaps changing to Set in order to create as many arrays as needed when there a larger groups of anagrams
// I evnetually used an object to store the keys of letters for each anagram, and then stored the words as the value for key as an array.  Object is the best way when you are unsure on the amount of arrays you may need.  1-28-25

/**
 * @param {string[]} strs
 * @return {string[][]}
 */
var groupAnagrams = function(strs) {
    let anagrams = {};
    let sortedStrs = []

    for ( i= 0 ; i < strs.length ; i++) {
        sortedWord = strs[i].split("").sort().join("");
        sortedStrs.push(sortedWord)
        
        if(!(sortedStrs[i] in anagrams)){
            anagrams[sortedWord] = [strs[i]];
        } else {
            anagrams[sortedWord].push(strs[i]);
        }
    } 

    return Object.values(anagrams)

};
