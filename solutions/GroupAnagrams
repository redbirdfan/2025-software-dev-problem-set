//link https://leetcode.com/problems/group-anagrams/

//Three arrays fill great, showing logic is correct.  Will need to rewrite to create a new array, perhaps changing to Set in order to create as many arrays as needed when there a larger groups of anagrams

/**
 * @param {string[]} strs
 * @return {string[][]}
 */
var groupAnagrams = function(strs) {
    strs = strs.sort()
     let anagrams = [];
    let arrayOne = [strs[0]];
    let arrayTwo = [];
    let arrayThree = [];

    for (let i = 1; i < strs.length; i++) {
        if (arrayOne[0].split("").sort().join("") === strs[i].split("").sort().join("")) {
            arrayOne.push(strs[i])
        } else if (arrayTwo.length === 0 && arrayOne[0].split("").sort().join("") !== strs[i].split("").sort().join("")) {
            arrayTwo.push(strs[i])
        } else if (arrayTwo[0].split("").sort().join("") === strs[i].split("").sort().join("")) {
            arrayTwo.push(strs[i])
        } else arrayThree.push(strs[i])
    }
    if(arrayThree.length !== 0){
        anagrams.push(arrayThree.sort())
    } 
    if(arrayTwo.length !== 0){
        anagrams.push(arrayTwo.sort())
    } 
    if(arrayOne.length !== 0){
        anagrams.push(arrayOne.sort())
    }
    return anagrams
    
};
